version: "3.7"

services:
  proxy:
    image: nginx
    restart: always
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf
      - ./proxy/snippets:/etc/nginx/snippets
      - ./proxy/ssl:/etc/ssl
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - back
      - front
      - adminer

  back:
    build:
      context: ./back
      dockerfile: back.dockerfile
    restart: always
    entrypoint: "./entrypoint.sh"
    command: "gunicorn -c 'python:config.gunicorn' 'app:create_app()'"
    environment:
      FLASK_ENV: "development"
    ports:
      - "5000:5000"
    volumes:
      - ./back:/app
    depends_on:
      - database

  # beacon:
  #   build:
  #     context: ./beacon
  #     dockerfile: beacon.dockerfile
  #   restart: always
  #   command: "npm run start:dev"
  #   environment:
  #     NODE_ENV: "development"
  #   volumes:
  #     - ./beacon:/beacon
  #   ports:
  #     - "4000:4000"
  #   depends_on:
  #     - back

  front:
    build:
      context: ./front
      dockerfile: front.dockerfile

  database:
    build:
      context: ./back/database
      dockerfile: database.dockerfile
    restart: always
    environment:
      POSTGRES_DB: kontact_dev
      POSTGRES_USER: developer
      POSTGRES_PASSWORD: secret
    volumes:
      - db-data:/var/lib/postgresql/data

  adminer:
    image: adminer:standalone
    environment:
      ADMINER_DESIGN: "mvt"
    links:
      - database

volumes:
  db-data:

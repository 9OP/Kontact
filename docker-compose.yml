version: "3.7"

services:
  proxy:
    container_name: "kontact_proxy"
    image: nginx
    restart: always
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf
      - ./proxy/snippets:/etc/nginx/snippets
      - ./proxy/ssl:/etc/ssl
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - back
      - beacon
      - bearer
      - front
      - adminer

  back:
    container_name: "kontact_back"
    build:
      context: ./back
      dockerfile: back.dockerfile
    restart: always
    command: "./startup.sh"
    environment:
      FLASK_ENV: "development"
    ports:
      - "5000:5000"
    volumes:
      - ./back:/app
    depends_on:
      - postgres

  bearer:
    container_name: "kontact_bearer"
    build:
      context: ./bearer
      dockerfile: bearer.dockerfile
    restart: always
    command: "./startup.sh"
    ports:
      - "6000:6000"
    volumes:
      - ./bearer:/app
    depends_on:
      - mongo

  beacon:
    container_name: "kontact_beacon"
    build:
      context: ./beacon
      dockerfile: beacon.dockerfile
    restart: always
    command: "./startup.sh"
    environment:
      CHOKIDAR_USEPOLLING: "true" # necessary ??
      NODE_ENV: "development"
    volumes:
      - ./beacon:/app
    depends_on:
      - back

  front:
    container_name: "kontact_front"
    build:
      context: ./front
      dockerfile: front.dockerfile
    environment:
      CHOKIDAR_USEPOLLING: "true" # necessary ??
      NODE-ENV: "development"
    volumes:
      - ./front:/app

  postgres:
    container_name: "kontact_postgres"
    build:
      context: ./back/database
      dockerfile: database.dockerfile
    restart: always
    command: ["postgres", "-c", "log_statement=all"]
    environment:
      POSTGRES_DB: kontact_dev
      POSTGRES_USER: developer
      POSTGRES_PASSWORD: secret
    volumes:
      - pgdata:/var/lib/postgresql/data

  mongo:
    container_name: "kontact_mongo"
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db

  adminer:
    container_name: "kontact_adminer"
    image: adminer:standalone
    ports:
      - "8080:8080"
    environment:
      ADMINER_DESIGN: "mvt"

volumes:
  pgdata:
  mongodata:

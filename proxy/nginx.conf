events {

}

http {
    upstream back {
        server back:5000;
    }

    upstream beacon {
        server beacon:4000;
    }

    upstream bearer {
        server bearer:6000;
    }

    upstream web {
        server front:3000;
    }

    upstream database {
        server adminer:8080;
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name 0.0.0.0;
        return 302 https://$server_name$request_uri;
    }

    server {
        # Docker DNS
        # resolver 127.0.0.11 valid=30s;
        # server_name app.kontact.net;
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        include snippets/self-signed.conf;
        include snippets/ssl-params.conf;

        location /api/back/ {
            proxy_pass http://back/;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_redirect off;
        }

        location ~ /api/bearer/(?<url>.*) {
            proxy_pass http://bearer/$url;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_redirect off;
        }

        location ~ /beacon {
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-NginX-Proxy false;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;

            # proxy_pass http://beacon;
            proxy_pass http://beacon;
            proxy_redirect off;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location /database/ {
            proxy_pass http://database/;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_redirect off;
        }

        location / {
            proxy_pass http://web;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_redirect off;
        }
    }
}
